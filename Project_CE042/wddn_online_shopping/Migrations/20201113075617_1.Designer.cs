// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wddn_online_shopping.Models.context_class;

namespace wddn_online_shopping.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201113075617_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("customeritem_detail", b =>
                {
                    b.Property<int>("buyers_listcustomer_id")
                        .HasColumnType("int");

                    b.Property<int>("customer_orederproduct_id")
                        .HasColumnType("int");

                    b.HasKey("buyers_listcustomer_id", "customer_orederproduct_id");

                    b.HasIndex("customer_orederproduct_id");

                    b.ToTable("customeritem_detail");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("customer_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_confirm_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customer_mobile_no")
                        .HasColumnType("int");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.customer_cart_item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("customer_id1")
                        .HasColumnType("int");

                    b.Property<int?>("item_Detailproduct_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customer_id1");

                    b.HasIndex("item_Detailproduct_id");

                    b.ToTable("cart_Items");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.item_detail", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_price")
                        .HasColumnType("int");

                    b.Property<int>("product_quantity")
                        .HasColumnType("int");

                    b.Property<int?>("seller_detailseller_id")
                        .HasColumnType("int");

                    b.HasKey("product_id");

                    b.HasIndex("seller_detailseller_id");

                    b.ToTable("item_Details");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.seller", b =>
                {
                    b.Property<int>("seller_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("seller_confirm_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seller_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seller_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("seller_mobile_no")
                        .HasColumnType("int");

                    b.Property<string>("seller_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seller_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seller_shop_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("seller_id");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("customeritem_detail", b =>
                {
                    b.HasOne("wddn_online_shopping.Models.model_class.customer", null)
                        .WithMany()
                        .HasForeignKey("buyers_listcustomer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wddn_online_shopping.Models.model_class.item_detail", null)
                        .WithMany()
                        .HasForeignKey("customer_orederproduct_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.customer_cart_item", b =>
                {
                    b.HasOne("wddn_online_shopping.Models.model_class.customer", "customer")
                        .WithMany("customer_cart")
                        .HasForeignKey("customer_id1");

                    b.HasOne("wddn_online_shopping.Models.model_class.item_detail", "item_Detail")
                        .WithMany("customer_cart_list")
                        .HasForeignKey("item_Detailproduct_id");

                    b.Navigation("customer");

                    b.Navigation("item_Detail");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.item_detail", b =>
                {
                    b.HasOne("wddn_online_shopping.Models.model_class.seller", "seller_detail")
                        .WithMany("item_Details")
                        .HasForeignKey("seller_detailseller_id");

                    b.Navigation("seller_detail");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.customer", b =>
                {
                    b.Navigation("customer_cart");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.item_detail", b =>
                {
                    b.Navigation("customer_cart_list");
                });

            modelBuilder.Entity("wddn_online_shopping.Models.model_class.seller", b =>
                {
                    b.Navigation("item_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
